<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- security-conxtex.xml (시큐리티 관련설정) -->
	
	<!-- 시큐리티에 필요한 객체 생성  -->
	<bean id="customAccessDenied" class="com.itwillbs.security.CustomAccessDeniedHandler"/>
	<bean id="customLoginSuccess" class="com.itwillbs.security.CustomLoginSuccessHandler"/>
	<bean id="customNoPassword" class="com.itwillbs.security.CustomNoPasswordEncoder"/> <!-- 암호화 없이 사용하는 임시비밀번호 객체 -->
<!-- 	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/> 비밀번호 인코딩 빈객체 생성 -->
	
	
	<security:http>
		
		<security:intercept-url pattern="/all" access="permitAll" />
		<security:intercept-url pattern="/member" access="hasRole('ROLE_MEMBER')" />
		<security:intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/boards/*" access="hasRole('ROLE_MEMBER')" />
		
		<!-- 시큐리티 로그인페이지(기본값) -->
<!-- 		<security:form-login/> -->
		<security:form-login login-page="/myLogin" authentication-success-handler-ref="customLoginSuccess"/>
		
		<!-- 로그아웃 -->
		<security:logout logout-url="/myLogout" invalidate-session="true"/>
		
		
		<!-- 에러발생(접근권한) 처리 페이지 -->
		<!-- <security:access-denied-handler error-page="/accessErr" /> -->
		
		<security:access-denied-handler ref="customAccessDenied"/>
		
	</security:http>

    <!-- 인증 매니저 -->
    <security:authentication-manager>
    
<!--     	<security:authentication-provider> -->
<!-- 			<security:user-service> -->
				
<!-- 				<security:user name="itwill" password="{noop}1234" authorities="ROLE_MEMBER"/> -->
<!-- 				<security:user name="admin" password="{noop}1234" authorities="ROLE_ADMIN,ROLE_MEMBER"/> -->
			
<!-- 			</security:user-service>    	 -->
<!--     	</security:authentication-provider> -->
    	
    	<security:authentication-provider>
    	
<!-- 			<security:jdbc-user-service data-source-ref="dataSource"/>    	 -->
    		<security:jdbc-user-service data-source-ref="dataSource" 
    		users-by-username-query="select userid, userpw, enabled from tbl_member where userid=?" 
    		authorities-by-username-query="select userid, auth from tbl_member_auth where userid=?"/>
    		
    		<security:password-encoder ref="customNoPassword"/> <!-- 비밀번호 없이 인코딩할 때 --> 
<!--     		<security:password-encoder ref="bcryptPasswordEncoder"/> 비밀번호 인코딩 사용할 때 -->
    		
    	</security:authentication-provider>
    	
    </security:authentication-manager>

</beans>
